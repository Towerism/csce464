#+TITLE:HW7
#+AUTHOR:Martin Fracker
1) Needs to show each step of the algorithm. See tables below.
2) Ack packets will not be subjected to the same congestion that data packets
   may be exposed to making it less likely that the sender will timeout for a
   particular data packet.
3) Faster recovery due to relatively shorter RTT on wireless link $BD$. Not
   reacting too aggressively due to errors may reduce overhead on wireless link $BD$.
4) 
   1) [1,6] slow start
   2) [6,16], [17,22] avoidance
   3) The cwd is cut in half which indicates a triple dupack.
   4) sstresh is initialized to its maximum value, in this example it looks like
      that maximum value is 32 segments
   5) 21 (in otherwords half of what the cwnd was before the triple dupack)
   6) 13 (in otherwords half of what the cwnd was before the timeout)
   7) The first 63 segments are sent during the first 16 transmission rounds. In
      the 17th transmission round 33 more segments will be transmitted, one of
      them being the 70th segment.
   8) cwnd will be set to 4, and ssthresh will save the old cwnd, 8.
5) After a data hiatus. Do you continue with the recently used cwd and threshold
   values, or do you go through the process of slow start all over again?

| Destination | next-hop | cost |
|-------------+----------+------|
| A           | *        |  0   |
| B           | B        |  4   |
| C           | D        |  6   |
| D           | D        |  4   |
| E           | D        |  10  |

| Destination | next-hop | cost |
|-------------+----------+------|
| A           | A        |  4   |
| B           | C        |  4   |
| C           | C        |  2   |
| D           | *        |  0   |
| E           | C        |  6   |
